version: 0.2

# AWS CodeBuild specification for building WebRTC Android with CometChat branding
# This buildspec replicates the GitHub Action workflow for AWS CodeBuild

phases:
  install:
    runtime-versions:
      python: 3.11
      java: corretto17
      nodejs: 20
    commands:
      # Update package manager and install required tools
      - echo "Installing required packages..."
      - apt-get update
      - apt-get install -y ninja-build git curl unzip
      
      # Install ALL WebRTC build dependencies to prevent interactive apt-get failure
      - echo "Installing complete WebRTC build dependencies..."
      - export DEBIAN_FRONTEND=noninteractive
      - apt-get install -y at-spi2-core binutils binutils-aarch64-linux-gnu binutils-arm-linux-gnueabihf
      - apt-get install -y binutils-mips64el-linux-gnuabi64 binutils-mipsel-linux-gnu bison bzip2 cdbs
      - apt-get install -y curl dbus-x11 devscripts dpkg-dev elfutils fakeroot fd-find flex git-core
      - apt-get install -y gperf lib32gcc-s1 lib32stdc++6 lib32z1 libasound2 libasound2-dev libatk1.0-0
      - apt-get install -y libatspi2.0-0 libatspi2.0-dev libbluetooth-dev libbrlapi-dev libbrlapi0.8
      - apt-get install -y libbz2-1.0 libbz2-dev libc6 libc6-dev libc6-i386 libcairo2 libcairo2-dev
      - apt-get install -y libcap-dev libcap2 libcgi-session-perl libcups2 libcups2-dev libcurl4-gnutls-dev
      - apt-get install -y libdrm-dev libdrm2 libegl1 libelf-dev libevdev-dev libevdev2 libexpat1
      - apt-get install -y libffi-dev libffi8 libfontconfig1 libfreetype6 libfuse2 libgbm-dev libgbm1
      - apt-get install -y libgl1 libglib2.0-0 libglib2.0-dev libglu1-mesa-dev libgraphene-1.0-0
      - apt-get install -y libgtk-3-0 libgtk-3-dev libinput-dev libinput10 libjpeg-dev libkrb5-dev
      - apt-get install -y libncurses6 libnspr4 libnspr4-dev libnss3 libnss3-dev libpam0g libpam0g-dev
      - apt-get install -y libpango-1.0-0 libpangocairo-1.0-0 libpci-dev libpci3 libpcre3 libpixman-1-0
      - apt-get install -y libpng16-16 libpulse-dev libpulse0 libsctp-dev libspeechd-dev libspeechd2
      - apt-get install -y libsqlite3-0 libsqlite3-dev libssl-dev libstdc++6 libsystemd-dev libudev-dev
      - apt-get install -y libudev1 libuuid1 libva-dev libvulkan-dev libvulkan1 libwayland-egl1
      - apt-get install -y libwww-perl libx11-6 libx11-xcb1 libxau6 libxcb1 libxcomposite1 libxcursor1
      - apt-get install -y libxdamage1 libxdmcp6 libxext6 libxfixes3 libxi6 libxinerama1 libxkbcommon-dev
      - apt-get install -y libxrandr2 libxrender1 libxshmfence-dev libxslt1-dev libxss-dev libxt-dev
      - apt-get install -y libxtst-dev libxtst6 lighttpd locales mesa-common-dev mutter-common openbox
      - apt-get install -y p7zip patch perl pkgconf ripgrep rpm ruby uuid-dev wdiff x11-utils
      - apt-get install -y x11-xserver-utils xcompmgr xserver-xorg-core xserver-xorg-video-dummy xvfb
      - apt-get install -y xz-utils zip zlib1g zstd build-essential
      
      # Verify installations
      - echo "Verifying tool installations..."
      - ninja --version
      - python --version
      - java --version
      - javac --version
      - node --version

      # Show system information
      - echo "Current working directory:" $(pwd)
      - echo "Available disk space:"
      - df -h

  pre_build:
    commands:
      # Initial setup and source checkout
      - echo "Setting up WebRTC build environment..."
      - echo "Contents of current directory:" $(ls -la)
      
      # Setup WebRTC build environment
      # Note: All WebRTC dependencies are pre-installed in the install phase to avoid interactive prompts
      # The build script will automatically skip install-build-deps.sh in CodeBuild environment
      - python build-webrtc.py --setup --android $(pwd)
      - echo "Contents after setup:" $(ls -la)

  build:
    commands:
      # Checkout specific WebRTC branch
      - echo "Checking out WebRTC branch M106..."
      - cd ./build_webrtc/webrtc/android/src/
      - git checkout -b build-M106 refs/remotes/branch-heads/5249
      - echo "Contents of WebRTC source:" $(ls -la)
      - cd ../../../../

      # Sync WebRTC dependencies
      - echo "Syncing WebRTC dependencies..."
      - python build-webrtc.py --sync --android $(pwd)

      # Apply CometChat branding changes (rename org.webrtc to cometchat.webrtc)
      - echo "Applying CometChat branding changes..."
      - cd ./build_webrtc/webrtc/android/src/
      
      # Move directory structures from org to cometchat
      - mv test/android/org test/android/cometchat
      - mv modules/audio_device/android/java/src/org modules/audio_device/android/java/src/cometchat
      - mv rtc_base/java/src/org rtc_base/java/src/cometchat
      - mv sdk/android/tests/src/org sdk/android/tests/src/cometchat
      - mv sdk/android/instrumentationtests/src/org sdk/android/instrumentationtests/src/cometchat
      - mv sdk/android/native_unittests/org sdk/android/native_unittests/cometchat
      - mv sdk/android/src/java/org sdk/android/src/java/cometchat
      - mv sdk/android/api/org sdk/android/api/cometchat

      # Update package declarations and imports in Java files
      - find . -type f -name '*.java' -exec sed -i 's/package org\.webrtc\./package cometchat\.webrtc\./g' {} +
      - find . -type f -name '*.java' -exec sed -i 's/import org\.webrtc\./import cometchat\.webrtc\./g' {} +
      - find . -type f -name '*.java' -exec sed -i 's/package org\.webrtc;/package cometchat\.webrtc;/g' {} +
      - find . -type f -name '*.java' -exec sed -i 's/import static org\.webrtc\./import static cometchat\.webrtc\./g' {} +
      - find . -type f -name '*.java' -exec sed -i 's/org\.webrtc/cometchat\.webrtc/g' {} +

      # Update all other file references
      - find . -type f -name '*' -exec sed -i 's/org\.webrtc/cometchat\.webrtc/g' {} +
      - find . -type f -name '*' -exec sed -i 's|org/webrtc|cometchat/webrtc|g' {} +
      - find . -type f -name '*' -exec sed -i 's|org_webrtc|cometchat_webrtc|g' {} +
      - find . -type f -name '*' -exec sed -i 's|jingle_peerconnection|comet_jingle_peerconnection|g' {} +

      - cd ../../../../

      # Build WebRTC
      - echo "Building WebRTC for Android..."
      - python build-webrtc.py --build --android $(pwd)

  post_build:
    commands:
      - echo "Build completed successfully!"
      - echo "Checking for build artifacts..."
      - ls -la build_webrtc/build/android/ || echo "Build directory not found"

artifacts:
  files:
    - 'build_webrtc/build/android/android-webrtc.zip'
  name: android-webrtc-$(date +%Y-%m-%d-%H-%M-%S)

cache:
  paths:
    - 'build_webrtc/webrtc/**/*'

# Environment configuration for CodeBuild
# Recommended compute type: BUILD_GENERAL1_LARGE or BUILD_GENERAL1_XLARGE
# Recommended image: aws/codebuild/standard:7.0 (Ubuntu 22.04)
# This build requires significant resources due to WebRTC compilation
